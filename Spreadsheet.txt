class Spreadsheet {
    private int rows;
    private int[][] grid; // rows x 26

    public Spreadsheet(int rows) {
        this.rows = rows;
        this.grid = new int[rows][26]; // initialized to 0 automatically
    }

    // Convert cell reference like "B10" → [rowIndex, colIndex]
    private int[] parseCell(String cell) {
        char colChar = cell.charAt(0);
        int col = colChar - 'A'; // A=0, B=1, ...
        int row = Integer.parseInt(cell.substring(1)) - 1; // convert 1-based → 0-based
        return new int[]{row, col};
    }

    public void setCell(String cell, int value) {
        int[] pos = parseCell(cell);
        grid[pos[0]][pos[1]] = value;
    }

    public void resetCell(String cell) {
        int[] pos = parseCell(cell);
        grid[pos[0]][pos[1]] = 0;
    }

    public int getValue(String formula) {
        // formula always in format "=X+Y"
        String expr = formula.substring(1); // remove '='
        String[] parts = expr.split("\\+");
        return evaluateOperand(parts[0]) + evaluateOperand(parts[1]);
    }

    // Operand can be a number or a cell reference
    private int evaluateOperand(String operand) {
        operand = operand.trim();
        if (Character.isDigit(operand.charAt(0))) {
            return Integer.parseInt(operand);
        } else {
            int[] pos = parseCell(operand);
            return grid[pos[0]][pos[1]];
        }
    }
}
