class Solution {
    public int maximum69Number (int num) {
        int n=num,r;
        int s=0;
        int c=0;
        int k=0;
        boolean p=false;
        while(n!=0){
             r=n%10;
            s=s*10+r;
            n=n/10;
            c++;
        }
        while(s!=0){
            r=s%10;
            if(r==6){
                p=true;
                break;
            }
    
            k=k+1;
            s=s/10;
        }
        int v=1;
        if(!p) return num;
        while(c!=k){
            v*=10;
            k++;

        }
        v=v/10;
        return num+3*v;
    }
}






class Solution {
    public int maximum69Number (int num) {
        int [] arr = new int [4];
        for(int i=0;i<4;i++){
            int temp = num%10;
            num/=10;
            arr[i] = temp;
        }
        for(int i= arr.length-1;i>-1;i--){
            if(arr[i]==6){
                arr[i]=9;
                break;
            }
        }
         int temp1 = arr[0];
         int temp2 = arr[1]*10;
         int temp3 =arr[2]*100;
         int temp4 = arr[3]*1000;
        return temp1+temp2+temp3+temp4;
    }
}