/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if(root == null ) return res;
        Queue <TreeNode> q = new LinkedList<>();
        q.add(root);
        boolean flag = true; // means left->right
        while(!q.isEmpty()){
            int count = q.size();
            LinkedList<Integer> curList = new LinkedList<>();
            for(int i=0;i<count;i++){
                TreeNode curr = q.poll();
                if(flag){
                    curList.add(curr.val);//add each elemnt at last
                }else{
                    curList.addFirst(curr.val); //add each element at first (essentially reversing the list)
                }
                if(curr.left!=null) q.add(curr.left);
                if(curr.right!=null) q.add(curr.right);
            }
            res.add(curList);
            flag=!flag;
        }
        return res;
        
    }
}