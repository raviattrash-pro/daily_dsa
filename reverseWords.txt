class Solution {
    public String reverseWords(String s) {
        StringBuilder sb = new StringBuilder();
        int i = s.length() - 1;

        while (i >= 0) {
            // Skip trailing spaces
            while (i >= 0 && s.charAt(i) == ' ') i--;

            if (i < 0) break;

            int j = i;
            // Find start of word
            while (i >= 0 && s.charAt(i) != ' ') i--;

            // Append word
            sb.append(s.substring(i + 1, j + 1)).append(" ");
        }

        return sb.toString().trim(); // remove extra last space
    }
}



class Solution {
    public String reverseWords(String s) {
        s = s.trim(); // remove leading & trailing spaces
        String[] words = s.split("\\s+"); // split by one or more spaces

        StringBuilder sb = new StringBuilder();
        for (int i = words.length - 1; i >= 0; i--) {
            sb.append(words[i]);
            if (i != 0) {
                sb.append(" ");
            }
        }
        return sb.toString();
    }
}

import java.util.*;
import java.util.stream.*;

class Solution {
    public String reverseWords(String s) {
        return Arrays.stream(s.trim().split("\\s+"))
                     .collect(Collectors.collectingAndThen(
                         Collectors.toList(),
                         list -> {
                             Collections.reverse(list);
                             return String.join(" ", list);
                         }));
    }
}
