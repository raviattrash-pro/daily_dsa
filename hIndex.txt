class Solution {
    public int hIndex(int[] citations) {
        int n = citations.length;
        int[] buckets = new int[n + 1];  // bucket[0..n]

        // Count citations
        for (int c : citations) {
            if (c >= n) {
                buckets[n]++;   // all big citations go into last bucket
            } else {
                buckets[c]++;
            }
        }

        int total = 0;  // total papers counted so far
        // Go from high to low
        for (int i = n; i >= 0; i--) {
            total += buckets[i];
            if (total >= i) {
                return i;  // found the h-index
            }
        }
        return 0;
    }
}


import java.util.Arrays;

class Solution {
    public int hIndex(int[] citations) {
        Arrays.sort(citations);   // O(n log n)
        int n = citations.length;
        int h = 0;

        for (int i = 0; i < n; i++) {
            int papersWithAtLeast = n - i;  // remaining papers
            h = Math.max(h, Math.min(citations[i], papersWithAtLeast));
        }

        return h;
    }
}
