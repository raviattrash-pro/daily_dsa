class Solution {
    public boolean isPalindrome(String s) {
        int left = 0, right = s.length() - 1;

        while (left < right) {
            char cLeft = s.charAt(left);
            char cRight = s.charAt(right);

            // skip non-alphanumeric left
            if (!((cLeft >= 'a' && cLeft <= 'z') || 
                  (cLeft >= 'A' && cLeft <= 'Z') || 
                  (cLeft >= '0' && cLeft <= '9'))) {
                left++;
                continue;
            }

            // skip non-alphanumeric right
            if (!((cRight >= 'a' && cRight <= 'z') || 
                  (cRight >= 'A' && cRight <= 'Z') || 
                  (cRight >= '0' && cRight <= '9'))) {
                right--;
                continue;
            }

            // normalize to lowercase
            if (cLeft >= 'A' && cLeft <= 'Z') cLeft = (char)(cLeft + 32);
            if (cRight >= 'A' && cRight <= 'Z') cRight = (char)(cRight + 32);

            // compare
            if (cLeft != cRight) return false;

            left++;
            right--;
        }

        return true;
    }
}


class Solution {
    public boolean isPalindrome(String s) {
        int l= 0;
        int r = s.length() -1;
        while(l<r){
            while (l<r  && !Character.isLetterOrDigit(s.charAt(l))){
                l++;
            }
            while (l<r  && !Character.isLetterOrDigit(s.charAt(r))){
                r--;
            }
            if(Character.toLowerCase(s.charAt(l)) != Character.toLowerCase(s.charAt(r))){
                return false;
            }
            l++;
            r--;
        }
        return true;
    }
}

class Solution {
    public boolean isPalindrome(String s) {
        String low = s.toLowerCase();
        StringBuilder temp = new StringBuilder();
        for (int i = 0; i < low.length(); i++) {
            char c = low.charAt(i);
            if ((c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')) {
                temp.append(c);
            }
        }
        int l = 0;
        int r = temp.length() - 1;
        while (l < r) {
            if (temp.charAt(l) != temp.charAt(r)) {
                return false;
            }
            l++;
            r--;
        }
        return true;
    }
}

