import java.util.*;

class FoodRatings {
    // Maps
    private Map<String, String> foodToCuisine;
    private Map<String, Integer> foodToRating;
    private Map<String, TreeSet<String>> cuisineToFoods;
    private Map<String, Comparator<String>> cuisineComparators;

    public FoodRatings(String[] foods, String[] cuisines, int[] ratings) {
        foodToCuisine = new HashMap<>();
        foodToRating = new HashMap<>();
        cuisineToFoods = new HashMap<>();
        cuisineComparators = new HashMap<>();

        for (int i = 0; i < foods.length; i++) {
            String food = foods[i];
            String cuisine = cuisines[i];
            int rating = ratings[i];

            foodToCuisine.put(food, cuisine);
            foodToRating.put(food, rating);

            // Comparator for this cuisine if not exists
            cuisineComparators.putIfAbsent(cuisine,
                (a, b) -> {
                    int cmp = Integer.compare(foodToRating.get(b), foodToRating.get(a));
                    if (cmp == 0) return a.compareTo(b);
                    return cmp;
                }
            );

            cuisineToFoods.putIfAbsent(cuisine, new TreeSet<>(cuisineComparators.get(cuisine)));
            cuisineToFoods.get(cuisine).add(food);
        }
    }
    
    public void changeRating(String food, int newRating) {
        String cuisine = foodToCuisine.get(food);
        TreeSet<String> set = cuisineToFoods.get(cuisine);

        // Remove old entry
        set.remove(food);
        foodToRating.put(food, newRating);
        // Add updated entry
        set.add(food);
    }
    
    public String highestRated(String cuisine) {
        return cuisineToFoods.get(cuisine).first();
    }
}
